version: "3.9"

volumes:
  dev_postgres_data: {}
  dev_mailhog_data: {}
  dev_media: {}
  playwright_cache: {}

services:
  postgres:
    image: postgres:14.2
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data:Z
    ports:
      - "5432:5432"
  redis:
    image: redis:6.2.5-alpine
    ports:
      - "6379:6379"
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py rqscheduler
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - AWS_STORAGE_BUCKET_NAME=
      - PORT=8000
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py rqworker
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - AWS_STORAGE_BUCKET_NAME=
      - PORT=8000
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - AWS_STORAGE_BUCKET_NAME=
      - PORT=8000
