version: "3.9"

volumes:
  dev_postgres_data: {}
  dev_postgres_data_backups: {}
  dev_mailhog_data: {}

services:
  postgres:
    image: postgres:13.4
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data:Z
      - dev_postgres_data_backups:/backups:z
    ports:
      - "5432:5432"
  rabbitmq:
    image: rabbitmq:3.9.1-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
  mailhog:
    image: mailhog/mailhog:v1.0.0
    user: root
    command: ["-storage=maildir", "-maildir-path=/maildir"]
    volumes:
      - dev_mailhog_data:/maildir
    ports:
      - "1025:1025"
      - "8025:8025"
  celery:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    command: "watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A config worker -l INFO"
    volumes:
      - .:/code
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - DATABASE_NAME=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - DATABASE_NAME=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
  assets:
    build:
      context: .
      dockerfile: Dockerfile
      target: webpack
    volumes:
      - ./assets:/code/assets
      - ./static/dist:/code/static/dist
